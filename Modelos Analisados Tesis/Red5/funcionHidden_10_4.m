function [y1] = funcionHidden_10_4(x1) %MEJOR MODELO HASTA AHORA
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 09-Dec-2020 13:01:04.
% 
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = 20xQ matrix, input #1
% and returns:
%   y = 1xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0];
x1_step1.gain = [0.166666666666667;0.222222222222222;0.666666666666667;0.222222222222222;0.04;0.5;2;2;2;0.666666666666667;0.333333333333333;0.111111111111111;0.2;0.4;0.2;2;2;2;2.63758793838527;2.5781544245973];
x1_step1.ymin = -1;

% Layer 1
b1 = [0.037793717391825250307;0.29189403342531439201;0.18367985208007162057;0.2340399071009236498;-0.08081740808305799828;0.25611837855805880126;0.16943847025195263312;0.047927626445709373137;-0.12147271879797391647;0.084234470976211603399];
IW1_1 = [0.14679139858416501152 0.66518666526663894345 0.22765961025248235283 -0.21111638878662183916 -0.90907802979164498147 0.20856958758499671847 0.10599162197426435783 0.20188112891793183468 -0.12698353334606435339 1.1852006347072945314 0.35955032330512487482 -0.73253163944775379068 0.11168579459191857461 -0.38082811126665749857 0.28993853145954412431 -0.13781110318909914336 0.02561011962606391662 0.095884758552789037256 0.091897989607382934985 0.81335998328633130061;-0.94721600479771572711 -0.16894936753413558606 -0.31220605557294373034 0.39585056287717906853 1.6152225065103400503 -0.036823783216873122448 0.14975853686021825539 -0.18040027516079068515 0.27858875002980931779 -0.94937997410782615226 0.51107021372925842684 0.15757300231533746815 0.26630172710230293198 0.20474156417895142401 0.3963945048164341789 -0.19679671573396803619 -0.1633655261160692207 -0.2889601399390387404 0.56455228756027564518 1.0439192503204937079;0.17099629859932022335 -0.6430814775451352272 0.027417491249138038756 0.31365845618860938027 1.1927938629493295419 1.6223705697996961828 -0.11155359479925935906 -0.36453712517541658755 0.32469545127681997965 0.52785700783588451745 -0.70051654049285827508 -0.5577003143922990569 0.14566035368312471587 0.26767230438092876055 -0.14198108642195339524 -0.50155562896112226845 -0.41742546730451640657 -0.2045624966102604636 0.86389973706553768729 -0.27003590266948346299;0.036655196963640647445 0.33337603849747859952 -0.11771134581985252809 0.52965259974927325626 0.25902389458412805601 1.6439445677151904857 0.053405763451053446522 -0.31454558121990267017 -0.024383011579277358294 0.33548152285564192265 -1.2921992612560779801 0.20472681960607011509 0.28606243451873075712 0.077732563536331358844 -0.038947301353114201217 -0.14130582567980110031 -0.070801869879088291659 -0.20319218604829028529 0.0053621448766182728748 0.32183861897817461761;-0.050761180732626053069 0.18784774535627135617 0.25567925286444292965 0.53877344403362470437 -1.8702345382183764855 -0.32155124515510924432 0.19584319582379478009 -0.015843758040197171433 0.042445595124657280184 0.014309627795848284953 0.8904194855460119129 1.0360107587427418441 -0.71008477710800110838 -0.1536757410706412752 0.55081364341746197333 -0.18505083334910354953 0.15777768426845573124 0.24833469471304311926 0.39345627953795503373 0.27745144974642271807;-0.21622627816513220744 0.2273638408219485485 -1.0794692031540285004 0.71112039794989156949 1.2248869817178156261 0.35378943291607262145 -0.069582045732687933248 0.085942269860503711643 -0.08550362105671496793 0.5210947555769825934 -0.10359524605595346602 0.12826745860132238164 -1.037849913385935352 -1.0237301134069767272 0.78916628421804468907 0.28179505477586463957 0.0099656554371807797715 -0.069427941136922063925 -0.082313085474282565723 0.035158780804701028622;0.52623003673735091468 0.074188775458455036294 0.45279457767037795124 -0.44202257447244547306 -0.86776391845431166683 0.30056618169462645529 -0.15206422999252500183 0.017698711816620478487 -0.29627603470304569866 0.72396048171340077193 -0.51357601590212254017 0.47748981432726361751 1.3371758352044720297 -0.00072164424530301890959 -0.48952911409491828287 -0.31404493899420515834 -0.093615608124367380438 -0.11819214662760704759 -0.97402302904543847095 -0.47154349298086861708;0.21051980766138092549 -0.009081486226740261708 0.59038679782812242269 -0.5155415911550952357 0.53090588301617225309 -0.51016495731382704992 0.12951928904773571394 -0.17806004610825171275 -0.2065366040065213793 -1.2761407289771700135 -0.48489542269996432911 -0.33676814340856020547 -0.0062353215367944728534 0.84331114390360162325 -0.49875729782376954091 0.074159190070575420339 0.098236144704558103768 0.027033675954654872581 0.6079068641547528129 0.68152571664219085967;-0.43882886649061564333 -0.79412683504404557588 -0.70746114275093407997 1.1329578091646146376 0.22099684736696867393 -0.53139698404671942278 0.15990060343019460443 -0.091327351067149370456 0.19868524430726328123 0.39545039297403405953 0.43552186370638662494 0.43370296616446157856 0.011667980921483715392 0.11401288715715127142 0.61488615914607480661 0.18500494719266893928 -0.12316578457028003191 0.041256603579671119464 1.3120010728742066419 1.2916227565247024867;-0.050638049129016836358 0.055702085499594836127 0.069623898021301561245 -0.31648247840176141343 0.53188768265913510813 -0.12234497435008016841 0.0082859912065116961277 0.12229960170956090393 -0.046476186719316456286 -0.62691272025854227756 -0.47912349257010655723 -0.1499091217307025603 0.040577049991576137622 0.82363173126489164222 -0.68742663190956743158 0.44052868821553137213 0.071015177183742519973 0.061175669301517097975 -0.70147648134109397144 -0.72089944672238270851];

% Layer 2
b2 = -0.17026294287695820096;
LW2_1 = [1.5735545677222022576 1.6513097527831550604 1.7567227368520748065 -1.6831192422780278939 1.4897439480746368368 1.7635192423084820046 1.4483203745170043497 1.4778416759233199418 -1.2456148485156608441 1.6282461044399920702];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.0196656833824975;
y1_step1.xoffset = 0;

% ===== SIMULATION ========

% Dimensions
Q = size(x1,2); % samples

% Input 1
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
